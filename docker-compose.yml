version: "3.8"
services:
  postgres-user:
    image: postgres:16
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d userdb"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [appnet]

  postgres-order:
    image: postgres:16
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: order
      POSTGRES_PASSWORD: pass
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U order -d orderdb"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [appnet]

  user-service:
    build: ./user-service
    depends_on:
      postgres-user:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/userdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: pass
    ports:
      - "8081:8081"
    networks: [appnet]

  order-service:
    build: ./order-service
    depends_on:
      postgres-order:
        condition: service_healthy
      user-service:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-order:5432/orderdb
      SPRING_DATASOURCE_USERNAME: order
      SPRING_DATASOURCE_PASSWORD: pass
      USER_SERVICE_BASEURL: http://user-service:8081
    ports:
      - "8082:8082"
    networks: [appnet]

  payment-service:
    build: ./payment-service
    depends_on:
      order-service:
        condition: service_started
    environment:
      ORDER_SERVICE_BASEURL: http://order-service:8082
    ports:
      - "8083:8083"
    networks: [appnet]

networks:
  appnet: